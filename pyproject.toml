[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
log_level = "INFO"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.bumpversion]
current_version = "0.9.0"
commit = true
message = "Release {new_version}"
tag = true
tag_message = "Release {new_version}"

[[tool.bumpversion.files]]
filename = "src/libres/__init__.py"
search= "__version__ = '{current_version}'"
replace= "__version__ = '{new_version}'"

[[tool.bumpversion.files]]
filename = "HISTORY.rst"
search = """
---------
"""
replace = """
---------

{new_version} ({now:%d.%m.%Y})
~~~~~~~~~~~~~~~~~~~
"""

[tool.mypy]
python_version = "3.9"
namespace_packages = true
explicit_package_bases = true
strict = true
warn_unreachable = true
# FIXME: remove this exclusion when upgrading to SQlAlchemy 2.0
untyped_calls_exclude = "sqlalchemy"
plugins = "sqlmypy"
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
src = ["src", "tests"]
include = [
    "pyproject.toml",
    "src/**/*.py",
    "tests/**/*.py",
    "stubs/**/*.pyi"
]
line-length = 79
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = [
    "B0",
    "B904",
    "B909",
    "C4",
    "COM818",
    "D2",
    "D301",
    "D4",
    "E",
    "F",
    "FLY002",
    "I002",
    "ISC",
    "N",
    "PERF",
    "PGH004",
    "PIE",
    "PYI",
    "Q",
    "RUF",
    "SIM",
    "SLOT",
    "UP",
    "W"
]
ignore = [
    "B007",
    "C420",
    "D200",
    "D201",
    "D202",
    "D204",
    "D205",
    "D209",
    "D210",
    "D211",
    "D400",
    "D401",
    "D412",
    "E226",
    "E402",
    "E711",
    "E712",
    "E741",
    "N818",
    "PYI019",
    "PYI041",
    "RUF012",
    "RUF013",
    "RUF021",
    "RUF022",
    "RUF023",
    "RUF031",
    "RUF052",
    "RUF056",
    "SIM103",
    "SIM105",
    "SIM108",
    "SIM110",
    "SIM118",
    "SIM210",
    "SIM910",
    "UP009",
    "UP012",
    "UP032",
    "UP038",
]
unfixable = []
external = ["TC"]
allowed-confusables = ["Ã—"]
preview = true

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "C4",
    "D",
    "FLY002",
    "I002",
    "ISC",
    "N",
    "Q",
    "PERF",
    "PGH",
    "PIE",
    "PYI",
    "RUF",
    "SIM",
    "UP",
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = [
    "afterFlowable",
    "HSTORE",
    "sortKey",
    "URL",
    "UUID"
]
classmethod-decorators = [
    # NOTE: We can potentially get rid some of these with SQLAlchemy 2.0
    #       since they should cleanly combine with classmethod
    "declared_attr",
    "expression",
    "comparator",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.flake8-quotes]
avoid-escape = true
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.tox]
requires = ["tox>=4.21"]
envlist = [
    "3.9",
    "3.10",
    "3.11",
    "3.12",
    "3.13",
    "flake8",
    "ruff",
    "bandit",
    "mypy",
    "report"
]

[tool.tox.gh.python]
"3.9" = ["3.9"]
"3.10" = ["3.10"]
"3.11" = ["3.11", "flake8", "bandit", "ruff", "mypy"]
"3.12" = ["3.12"]
"3.13" = ["3.13"]

[tool.tox.env_run_base]
use_develop = true
set_env = { COVERAGE_FILE = ".coverage.{envname}" }
deps = ["-e{toxinidir}[test]"]
commands = [
    [
        "pytest",
        "--cov",
        "--cov-report=",
        { replace = "posargs", default = [], extend = true }
    ],
]
[tool.tox.env.ruff]
base_python = ["python3.11"]
skip_install = true
deps = ["ruff"]
commands = [["ruff", "check"]]

[tool.tox.env.flake8]
base_python = ["python3.11"]
skip_install = true
deps = [
    "flake8",
    "flake8-type-checking",
]
commands = [["flake8", "src{/}", "tests{/}"]]

[tool.tox.env.bandit]
base_python = ["python3.11"]
skip_install = true
deps = ["bandit[toml]"]
commands = [["bandit", "-q", "-c", "pyproject.toml", "-r", "src"]]

[tool.tox.env.mypy]
base_python = ["python3.11"]
skip_install = true
deps = ["-e{toxinidir}[mypy]"]
commands = [
    ["mypy", "-p", "libres", "--python-version", "3.9"],
    ["mypy", "-p", "libres", "--python-version", "3.10"],
    ["mypy", "-p", "libres", "--python-version", "3.11"],
    ["mypy", "-p", "libres", "--python-version", "3.12"],
    ["mypy", "-p", "libres", "--python-version", "3.13"],
]

[tool.tox.env.report]
base_python = ["python3.11"]
skip_install = true
ignore_errors = true
ignore_outcome = true
set_env = { COVERAGE_FILE = ".coverage" }
deps = ["coverage"]
commands = [
    ["coverage", "combine", "{toxinidir}"],
    ["coverage", "report", "-m"],
]
